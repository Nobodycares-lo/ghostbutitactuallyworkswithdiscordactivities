import { c as createComponent, r as renderTemplate, d as renderComponent, m as maybeRenderHead } from '../chunks/astro/server_CzykWKfA.mjs';
import 'kleur/colors';
import { $ as $$Layout } from '../chunks/Layout_DsvG8ZT1.mjs';
/* empty css                             */
export { renderers } from '../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Q = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate(_a || (_a = __template(['<title>Classes</title><link rel="icon" id="favicon" type="image/svg+xml" href="/img/classroom.png">', "<script>\n    const frame = document.getElementById('frame')\n    const form = document.getElementById('forminput')\n    const topbar = document.getElementById('topbar')\n    localStorage.setItem('nav', '0')\n    const nav = document.getElementById('topbar')\n    const navbttn = document.getElementById('navbttn1')\n    const uvurl = localStorage.getItem('url')\n    const spanel = document.getElementById('spanel')\n    const panelbttn = document.getElementById('panelbttn')\n    const uvpanel = document.getElementById('uvpanel')\n    const panel2bttn = document.getElementById('pnlbttn')\n    const url = localStorage.getItem('url')\n    const input = document.querySelector('.search')\n    const stockSWv2 = '/u/sw.js'\n    const barbutton = document.getElementById('barButton')\n    const iframe = document.getElementById('frame')\n\n    document.addEventListener('DOMContentLoaded', (event) => {\n        LoadURL()\n    })\n\n    function closeTopbar() {\n        iframe.classList.remove('mainframe')\n        iframe.classList.add('iframe')\n        topbar.classList.remove('topbar')\n        topbar.classList.add('hiddenbar')\n        barbutton.classList.remove('barbutton')\n        barbutton.classList.add('showbutton')\n    }\n\n    function home() {\n        window.location.href = '/'\n    }\n\n    function openTopbar() {\n        barbutton.classList.remove('showbutton')\n        barbutton.classList.add('barbutton')\n        iframe.classList.remove('iframe')\n        iframe.classList.add('mainframe')\n        topbar.classList.remove('hiddenbar')\n        topbar.classList.add('topbar')\n    }\n\n    function copyurl() {\n        const copybttn = document.getElementById('copybttn')\n        navigator.clipboard.writeText(frame.src)\n        copybttn.textContent = 'Copied!'\n        setTimeout(\"copybttn.textContent = 'Copy URL'\", 3000)\n    }\n\n    function refresh() {\n        iframe.src = frame.src\n    }\n\n    function back() {\n        iframe.contentWindow.history.back()\n    }\n\n    function forward() {\n        iframe.contentWindow.history.forward()\n    }\n\n    //jank!!!\n\n    function setURL() {\n        frame.contentWindow.window.open = function (\n            url,\n            windowName,\n            windowFeatures\n        ) {\n            iframe.src = '/u/liftoff/' + __uv$config.encodeUrl(url)\n        }\n        if (document.activeElement === document.getElementById('forminput')) {\n        } else {\n            const geturl = frame.contentWindow.location.href\n            const removedUrl = geturl.replace(\n                'https://' + location.hostname + '/u/liftoff/',\n                ''\n            )\n            form.value = __uv$config.decodeUrl(removedUrl)\n            localStorage.setItem('url', frame.src)\n        }\n    }\n\n    setInterval(function () {\n        setURL()\n    }, 3000)\n\n    function LoadURL() {\n        frame.src = url\n    }\n\n    function openswitchpanel() {\n        uvpanel.classList.remove('hiddenuvpanel')\n        uvpanel.classList.add('uvpanel')\n        panelbttn.setAttribute('onclick', 'closeswitchpanel()')\n    }\n\n    function closeswitchpanel() {\n        uvpanel.classList.remove('uvpanel')\n        uvpanel.classList.add('hiddenuvpanel')\n        panelbttn.setAttribute('onclick', 'openswitchpanel()')\n    }\n\n    function op() {\n        var win = window.open()\n        var url = '/q/'\n        var iframe = win.document.createElement('iframe')\n        iframe.style.position = 'fixed'\n        iframe.style.top = 0\n        iframe.style.bottom = 0\n        iframe.style.left = 0\n        iframe.style.right = 0\n        iframe.style.border = 'none'\n        iframe.style.outline = 'none'\n        iframe.style.width = '100%'\n        iframe.style.height = '100%'\n        iframe.src = url\n\n        win.document.body.appendChild(iframe)\n    }\n\n    function rammer() {\n        //for later\n    }\n\n    function inspect() {\n        document.getElementById('frame').contentWindow.eruda.init()\n    }\n\n    document.addEventListener('DOMContentLoaded', () => {\n        const input = document.querySelector('.input')\n        input.addEventListener('keydown', handleInput)\n\n        function handleInput(e) {\n            if (e.key !== 'Enter') return\n            if (containsBlockedKeyword(input.value, blocked)) {\n                window.location.replace('/blocked.html')\n            } else {\n                const query = formatSearch(input.value)\n                localStorage.setItem(\n                    'url',\n                    __uv$config.prefix + __uv$config.encodeUrl(query)\n                )\n                window.location.href = '/q/'\n            }\n        }\n\n        function containsBlockedKeyword(input, blockedList) {\n            for (let i = 0; i < blockedList.length; i++) {\n                if (input.includes(blockedList[i])) {\n                    return true\n                }\n            }\n            return false\n        }\n\n        function formatSearch(query) {\n            const engine = localStorage.getItem('engine')\n            if (engine === null) {\n                localStorage.setItem(\n                    'engine',\n                    'https://www.google.com/search?q='\n                )\n            }\n\n            try {\n                return new URL(query).toString()\n            } catch (e) {}\n\n            try {\n                const url = new URL(`https://${query}`)\n                if (url.hostname.includes('.')) return url.toString()\n            } catch (e) {}\n\n            return new URL(engine + `${query}`).toString()\n        }\n\n        const blocked = [\n            'porn',\n            'sex',\n            'xxx',\n            'hentai',\n            'pornhub.com',\n            'xxx.com',\n            '4chan.org',\n        ]\n    })\n<\/script>"], ['<title>Classes</title><link rel="icon" id="favicon" type="image/svg+xml" href="/img/classroom.png">', "<script>\n    const frame = document.getElementById('frame')\n    const form = document.getElementById('forminput')\n    const topbar = document.getElementById('topbar')\n    localStorage.setItem('nav', '0')\n    const nav = document.getElementById('topbar')\n    const navbttn = document.getElementById('navbttn1')\n    const uvurl = localStorage.getItem('url')\n    const spanel = document.getElementById('spanel')\n    const panelbttn = document.getElementById('panelbttn')\n    const uvpanel = document.getElementById('uvpanel')\n    const panel2bttn = document.getElementById('pnlbttn')\n    const url = localStorage.getItem('url')\n    const input = document.querySelector('.search')\n    const stockSWv2 = '/u/sw.js'\n    const barbutton = document.getElementById('barButton')\n    const iframe = document.getElementById('frame')\n\n    document.addEventListener('DOMContentLoaded', (event) => {\n        LoadURL()\n    })\n\n    function closeTopbar() {\n        iframe.classList.remove('mainframe')\n        iframe.classList.add('iframe')\n        topbar.classList.remove('topbar')\n        topbar.classList.add('hiddenbar')\n        barbutton.classList.remove('barbutton')\n        barbutton.classList.add('showbutton')\n    }\n\n    function home() {\n        window.location.href = '/'\n    }\n\n    function openTopbar() {\n        barbutton.classList.remove('showbutton')\n        barbutton.classList.add('barbutton')\n        iframe.classList.remove('iframe')\n        iframe.classList.add('mainframe')\n        topbar.classList.remove('hiddenbar')\n        topbar.classList.add('topbar')\n    }\n\n    function copyurl() {\n        const copybttn = document.getElementById('copybttn')\n        navigator.clipboard.writeText(frame.src)\n        copybttn.textContent = 'Copied!'\n        setTimeout(\"copybttn.textContent = 'Copy URL'\", 3000)\n    }\n\n    function refresh() {\n        iframe.src = frame.src\n    }\n\n    function back() {\n        iframe.contentWindow.history.back()\n    }\n\n    function forward() {\n        iframe.contentWindow.history.forward()\n    }\n\n    //jank!!!\n\n    function setURL() {\n        frame.contentWindow.window.open = function (\n            url,\n            windowName,\n            windowFeatures\n        ) {\n            iframe.src = '/u/liftoff/' + __uv$config.encodeUrl(url)\n        }\n        if (document.activeElement === document.getElementById('forminput')) {\n        } else {\n            const geturl = frame.contentWindow.location.href\n            const removedUrl = geturl.replace(\n                'https://' + location.hostname + '/u/liftoff/',\n                ''\n            )\n            form.value = __uv$config.decodeUrl(removedUrl)\n            localStorage.setItem('url', frame.src)\n        }\n    }\n\n    setInterval(function () {\n        setURL()\n    }, 3000)\n\n    function LoadURL() {\n        frame.src = url\n    }\n\n    function openswitchpanel() {\n        uvpanel.classList.remove('hiddenuvpanel')\n        uvpanel.classList.add('uvpanel')\n        panelbttn.setAttribute('onclick', 'closeswitchpanel()')\n    }\n\n    function closeswitchpanel() {\n        uvpanel.classList.remove('uvpanel')\n        uvpanel.classList.add('hiddenuvpanel')\n        panelbttn.setAttribute('onclick', 'openswitchpanel()')\n    }\n\n    function op() {\n        var win = window.open()\n        var url = '/q/'\n        var iframe = win.document.createElement('iframe')\n        iframe.style.position = 'fixed'\n        iframe.style.top = 0\n        iframe.style.bottom = 0\n        iframe.style.left = 0\n        iframe.style.right = 0\n        iframe.style.border = 'none'\n        iframe.style.outline = 'none'\n        iframe.style.width = '100%'\n        iframe.style.height = '100%'\n        iframe.src = url\n\n        win.document.body.appendChild(iframe)\n    }\n\n    function rammer() {\n        //for later\n    }\n\n    function inspect() {\n        document.getElementById('frame').contentWindow.eruda.init()\n    }\n\n    document.addEventListener('DOMContentLoaded', () => {\n        const input = document.querySelector('.input')\n        input.addEventListener('keydown', handleInput)\n\n        function handleInput(e) {\n            if (e.key !== 'Enter') return\n            if (containsBlockedKeyword(input.value, blocked)) {\n                window.location.replace('/blocked.html')\n            } else {\n                const query = formatSearch(input.value)\n                localStorage.setItem(\n                    'url',\n                    __uv$config.prefix + __uv$config.encodeUrl(query)\n                )\n                window.location.href = '/q/'\n            }\n        }\n\n        function containsBlockedKeyword(input, blockedList) {\n            for (let i = 0; i < blockedList.length; i++) {\n                if (input.includes(blockedList[i])) {\n                    return true\n                }\n            }\n            return false\n        }\n\n        function formatSearch(query) {\n            const engine = localStorage.getItem('engine')\n            if (engine === null) {\n                localStorage.setItem(\n                    'engine',\n                    'https://www.google.com/search?q='\n                )\n            }\n\n            try {\n                return new URL(query).toString()\n            } catch (e) {}\n\n            try {\n                const url = new URL(\\`https://\\${query}\\`)\n                if (url.hostname.includes('.')) return url.toString()\n            } catch (e) {}\n\n            return new URL(engine + \\`\\${query}\\`).toString()\n        }\n\n        const blocked = [\n            'porn',\n            'sex',\n            'xxx',\n            'hentai',\n            'pornhub.com',\n            'xxx.com',\n            '4chan.org',\n        ]\n    })\n<\/script>"])), renderComponent($$result, "Layout", $$Layout, { "title": "Google Classroom" }, { "default": ($$result2) => renderTemplate`${maybeRenderHead()}<button class="barbutton" id="barButton" onclick="
        openTopbar()"><span class="material-symbols-outlined">arrow_downward</span></button><div class="topbar" id="topbar" style="color: white;"><div class="topbar-content"><button class="topbtn" id="topbttn" onclick="closeTopbar()"><span class="material-symbols-outlined" style="color: white;">
arrow_upward
</span></button><button class="topbtn" id="panelbttn" onclick="openswitchpanel()"><span class="material-symbols-outlined" style="color: white;">
page_info
</span></button><button class="topbtn" id="fwdbttn" onclick="forward()" style="left: 10px;"><span class="material-symbols-outlined" style="color: white;">
arrow_forward
</span></button><button class="topbtn" id="rfshbttn" onclick="refresh()" style="left: 30px;"><span class="material-symbols-outlined" style="color: white;">
refresh
</span></button><button class="topbtn" id="bckbttn" onclick="back()" style="left: 30px;"><span class="material-symbols-outlined" style="color: white;">
arrow_back
</span></button><button class="topbtn" id="bckbttn" onclick="home()" style="left: 30px;"><span class="material-symbols-outlined" style="color: white;">
home
</span></button><input type="text" class="input" id="forminput" placeholder="Search Or Enter A URL.."></div></div><div class="hiddenuvpanel" id="uvpanel"><button class="copybttn" id="copybttn" onclick="copyurl()" style="font-family: 'Be Vietnam Pro', sans-serif;">Copy URL</button><button class="copybttn" id="copybttn" onclick="inspect()" style="font-family: 'Be Vietnam Pro', sans-serif;">Inspect</button><button class="topbtn" id="opbttn" onclick="op()" style="left: 30px; margin-top: 10px;"><span class="material-symbols-outlined"> open_in_new</span></button></div><iframe class="mainiframe" id="frame"></iframe>` }));
}, "/home/nobodycares/Documents/GitHub/Ghost-Astro/src/pages/q.astro", void 0);

const $$file = "/home/nobodycares/Documents/GitHub/Ghost-Astro/src/pages/q.astro";
const $$url = "/q";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
    __proto__: null,
    default: $$Q,
    file: $$file,
    url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
